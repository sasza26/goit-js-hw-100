{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('[name=\"delay\"]');\n  const stateInputs = document.querySelectorAll('[name=\"state\"]');\n\n  const delay = parseInt(delayInput.value);\n\n  let state;\n  stateInputs.forEach(input => {\n    if (input.checked) {\n      state = input.value;\n    }\n  });\n\n  const notificationPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else if (state === 'rejected') {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  notificationPromise\n    .then(delay => {\n      iziToast.success({\n        title: '✅ Fulfilled promise',\n        message: `Fulfilled promise in ${delay}ms`,\n      });\n    })\n    .catch(delay => {\n      iziToast.error({\n        title: '❌ Rejected promise',\n        message: `Rejected promise in ${delay}ms`,\n      });\n    });\n});\n"],"names":["event","delayInput","stateInputs","delay","state","input","resolve","reject","iziToast"],"mappings":"+FAGA,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAU,SAAUA,EAAO,CAC1EA,EAAM,eAAc,EAEpB,MAAMC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAc,SAAS,iBAAiB,gBAAgB,EAExDC,EAAQ,SAASF,EAAW,KAAK,EAEvC,IAAIG,EACJF,EAAY,QAAQG,GAAS,CACvBA,EAAM,UACRD,EAAQC,EAAM,MAEpB,CAAG,EAE2B,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC3D,WAAW,IAAM,CACXH,IAAU,YACZE,EAAQH,CAAK,EACJC,IAAU,YACnBG,EAAOJ,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAGE,KAAKA,GAAS,CACbK,EAAS,QAAQ,CACf,MAAO,sBACP,QAAS,wBAAwBL,CAAK,IAC9C,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdK,EAAS,MAAM,CACb,MAAO,qBACP,QAAS,uBAAuBL,CAAK,IAC7C,CAAO,CACP,CAAK,CACL,CAAC"}